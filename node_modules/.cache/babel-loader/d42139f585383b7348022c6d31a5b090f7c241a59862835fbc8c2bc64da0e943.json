{"ast":null,"code":"// import React, { useMemo, useState } from \"react\";\n\n// const currency = (n) => `$${Number(n).toFixed(2)}`;\n\n// export default function App() {\n//   const [balance, setBalance] = useState(4942.0);\n//   const [amount, setAmount] = useState(\"\");\n//   const [note, setNote] = useState(\"\");\n//   const [transactions, setTransactions] = useState([\n//     { id: 1, type: \"receive\", amount: 120.5, note: \"Refund\", date: new Date().toLocaleString() },\n//     { id: 2, type: \"send\", amount: 45.0, note: \"Taxi\", date: new Date().toLocaleString() },\n//   ]);\n\n//   const spentThisMonth = useMemo(() => {\n//     return transactions\n//       .filter((t) => t.type === \"send\")\n//       .reduce((sum, t) => sum + t.amount, 0);\n//   }, [transactions]);\n\n//   const handleTx = (type) => {\n//     const amt = parseFloat(amount);\n//     if (isNaN(amt) || amt <= 0) {\n//       alert(\"Enter a valid amount\");\n//       return;\n//     }\n//     if (type === \"send\" && amt > balance) {\n//       alert(\"Insufficient balance\");\n//       return;\n//     }\n//     setBalance((b) => (type === \"send\" ? b - amt : b + amt));\n//     setTransactions((list) => [\n//       { id: Date.now(), type, amount: amt, note, date: new Date().toLocaleString() },\n//       ...list,\n//     ]);\n//     setAmount(\"\");\n//     setNote(\"\");\n//   };\n\n//  return (\n//   <div className=\"min-h-screen flex flex-col bg-white\">\n//     {/* Header */}\n//     <header className=\"p-4 flex items-center justify-between\">\n//       <div className=\"text-xl font-bold\">Transaction App</div>\n//       <button aria-label=\"expand\" className=\"p-2 rounded-lg hover:bg-gray-100\">\n//         <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" className=\"w-6 h-6\">\n//           <path d=\"M7 3H3v4M17 3h4v4M21 17v4h-4M3 17v4h4\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" />\n//         </svg>\n//       </button>\n//     </header>\n\n//     {/* Scrollable main content */}\n//     <main className=\"flex-1 overflow-y-auto px-4 pb-24\">\n//       {/* Card */}\n//       <section>\n//         <div className=\"bg-gradient-to-r from-indigo-600 to-purple-600 rounded-3xl p-6 text-white shadow-xl\">\n//           <div className=\"flex justify-between items-center\">\n//             <span className=\"bg-white/90 text-black px-3 py-1 text-sm rounded-full shadow\">\n//               Master card ▾\n//             </span>\n//             <span className=\"opacity-70 text-sm\">Transaction App</span>\n//           </div>\n//           <div className=\"mt-6\">\n//             <p className=\"text-sm opacity-80\">Current Balance</p>\n//             <p className=\"text-4xl font-bold\">{currency(balance)}</p>\n//           </div>\n//           <div className=\"mt-6 flex justify-between text-sm opacity-80\">\n//             <p>Exp. 08/26</p>\n//             <p>Card 5679••••</p>\n//           </div>\n//         </div>\n//       </section>\n\n//       {/* Budgets */}\n//       <section className=\"mt-8\">\n//         <h2 className=\"text-lg font-semibold\">Budgets</h2>\n//         <div className=\"space-y-3 mt-3\">\n//           <BudgetRow label=\"Transportation\" left=\"$678 left\" percent={86} />\n//           <BudgetRow label=\"Groceries\" left=\"$326 left\" percent={67} />\n//         </div>\n//       </section>\n\n//       {/* Transactions */}\n//       <section className=\"mt-6 grid gap-3\">\n//         <h3 className=\"text-md font-semibold\">Make a Transaction</h3>\n//         <div className=\"flex gap-2\">\n//           <input\n//             type=\"number\"\n//             value={amount}\n//             onChange={(e) => setAmount(e.target.value)}\n//             placeholder=\"Amount\"\n//             className=\"flex-1 border rounded-xl px-3 py-2 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n//           />\n//           <button onClick={() => handleTx('send')} className=\"px-4 py-2 rounded-xl bg-red-500 text-white shadow\">\n//             Send\n//           </button>\n//           <button onClick={() => handleTx('receive')} className=\"px-4 py-2 rounded-xl bg-green-500 text-white shadow\">\n//             Receive\n//           </button>\n//         </div>\n//         <input\n//           value={note}\n//           onChange={(e) => setNote(e.target.value)}\n//           placeholder=\"Note (optional)\"\n//           className=\"border rounded-xl px-3 py-2 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n//         />\n//         <div className=\"text-sm text-gray-500\">Spent this month: {currency(spentThisMonth)}</div>\n//       </section>\n\n//       {/* History */}\n//       <section className=\"mt-6\">\n//         <h3 className=\"text-md font-semibold mb-2\">Transaction History</h3>\n//         <ul className=\"space-y-2\">\n//           {transactions.map((t) => (\n//             <li key={t.id} className=\"flex items-center justify-between bg-gray-50 p-3 rounded-xl shadow-sm\">\n//               <div className=\"flex items-center gap-3\">\n//                 <div className={\"w-9 h-9 rounded-full grid place-items-center \" + (t.type === \"send\" ? \"bg-red-100\" : \"bg-green-100\")}>\n//                   {t.type === \"send\" ? \"−\" : \"+\"}\n//                 </div>\n//                 <div>\n//                   <div className=\"font-medium\">\n//                     {t.type === \"send\" ? \"Sent\" : \"Received\"} {currency(t.amount)}\n//                   </div>\n//                   <div className=\"text-xs text-gray-500\">{t.note || \"—\"} · {t.date}</div>\n//                 </div>\n//               </div>\n//             </li>\n//           ))}\n//           {transactions.length === 0 && <p className=\"text-sm text-gray-400\">No transactions yet</p>}\n//         </ul>\n//       </section>\n//     </main>\n\n//     {/* Sticky bottom nav */}\n//     <nav className=\"h-20 bg-white border-t flex items-center justify-around fixed bottom-0 left-0 right-0\">\n//       <button className=\"flex flex-col items-center text-gray-500\">\n//         <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 mb-1\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\"><path strokeWidth=\"2\" d=\"M3 6h18M3 12h18M3 18h18\"/></svg>\n//         <span className=\"text-xs\">Cards</span>\n//       </button>\n//       <button className=\"flex flex-col items-center text-indigo-600\">\n//         <div className=\"h-12 w-12 bg-indigo-600 rounded-full flex items-center justify-center shadow-lg text-white\">⌁</div>\n//       </button>\n//       <button className=\"flex flex-col items-center text-gray-500\">\n//         <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 mb-1\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\"><circle cx=\"12\" cy=\"8\" r=\"4\" strokeWidth=\"2\"/><path d=\"M4 21a8 8 0 0116 0\" strokeWidth=\"2\"/></svg>\n//         <span className=\"text-xs\">Account</span>\n//       </button>\n//     </nav>\n//   </div>\n// );\n\n// }\n\n// function BudgetRow({ label, left, percent }) {\n//   return (\n//     <div className=\"bg-gray-100 rounded-2xl p-4 shadow-sm\">\n//       <div className=\"flex items-center justify-between\">\n//         <div>\n//           <p className=\"font-medium\">{label}</p>\n//           <p className=\"text-sm text-gray-500\">{left}</p>\n//         </div>\n//         <p className=\"text-lg font-semibold\">{percent}%</p>\n//       </div>\n//       <div className=\"mt-2 h-2 bg-white rounded-full overflow-hidden\">\n//         <div\n//           className=\"h-full bg-indigo-600\"\n//           style={{ width: `${percent}%` }}\n//         />\n//       </div>\n//     </div>\n//   );\n// }","map":{"version":3,"names":[],"sources":["/home/adams/Dev/payzz-dashboard/src/App.js"],"sourcesContent":["// import React, { useMemo, useState } from \"react\";\n\n// const currency = (n) => `$${Number(n).toFixed(2)}`;\n\n// export default function App() {\n//   const [balance, setBalance] = useState(4942.0);\n//   const [amount, setAmount] = useState(\"\");\n//   const [note, setNote] = useState(\"\");\n//   const [transactions, setTransactions] = useState([\n//     { id: 1, type: \"receive\", amount: 120.5, note: \"Refund\", date: new Date().toLocaleString() },\n//     { id: 2, type: \"send\", amount: 45.0, note: \"Taxi\", date: new Date().toLocaleString() },\n//   ]);\n\n//   const spentThisMonth = useMemo(() => {\n//     return transactions\n//       .filter((t) => t.type === \"send\")\n//       .reduce((sum, t) => sum + t.amount, 0);\n//   }, [transactions]);\n\n//   const handleTx = (type) => {\n//     const amt = parseFloat(amount);\n//     if (isNaN(amt) || amt <= 0) {\n//       alert(\"Enter a valid amount\");\n//       return;\n//     }\n//     if (type === \"send\" && amt > balance) {\n//       alert(\"Insufficient balance\");\n//       return;\n//     }\n//     setBalance((b) => (type === \"send\" ? b - amt : b + amt));\n//     setTransactions((list) => [\n//       { id: Date.now(), type, amount: amt, note, date: new Date().toLocaleString() },\n//       ...list,\n//     ]);\n//     setAmount(\"\");\n//     setNote(\"\");\n//   };\n\n//  return (\n//   <div className=\"min-h-screen flex flex-col bg-white\">\n//     {/* Header */}\n//     <header className=\"p-4 flex items-center justify-between\">\n//       <div className=\"text-xl font-bold\">Transaction App</div>\n//       <button aria-label=\"expand\" className=\"p-2 rounded-lg hover:bg-gray-100\">\n//         <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" className=\"w-6 h-6\">\n//           <path d=\"M7 3H3v4M17 3h4v4M21 17v4h-4M3 17v4h4\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" />\n//         </svg>\n//       </button>\n//     </header>\n\n//     {/* Scrollable main content */}\n//     <main className=\"flex-1 overflow-y-auto px-4 pb-24\">\n//       {/* Card */}\n//       <section>\n//         <div className=\"bg-gradient-to-r from-indigo-600 to-purple-600 rounded-3xl p-6 text-white shadow-xl\">\n//           <div className=\"flex justify-between items-center\">\n//             <span className=\"bg-white/90 text-black px-3 py-1 text-sm rounded-full shadow\">\n//               Master card ▾\n//             </span>\n//             <span className=\"opacity-70 text-sm\">Transaction App</span>\n//           </div>\n//           <div className=\"mt-6\">\n//             <p className=\"text-sm opacity-80\">Current Balance</p>\n//             <p className=\"text-4xl font-bold\">{currency(balance)}</p>\n//           </div>\n//           <div className=\"mt-6 flex justify-between text-sm opacity-80\">\n//             <p>Exp. 08/26</p>\n//             <p>Card 5679••••</p>\n//           </div>\n//         </div>\n//       </section>\n\n//       {/* Budgets */}\n//       <section className=\"mt-8\">\n//         <h2 className=\"text-lg font-semibold\">Budgets</h2>\n//         <div className=\"space-y-3 mt-3\">\n//           <BudgetRow label=\"Transportation\" left=\"$678 left\" percent={86} />\n//           <BudgetRow label=\"Groceries\" left=\"$326 left\" percent={67} />\n//         </div>\n//       </section>\n\n//       {/* Transactions */}\n//       <section className=\"mt-6 grid gap-3\">\n//         <h3 className=\"text-md font-semibold\">Make a Transaction</h3>\n//         <div className=\"flex gap-2\">\n//           <input\n//             type=\"number\"\n//             value={amount}\n//             onChange={(e) => setAmount(e.target.value)}\n//             placeholder=\"Amount\"\n//             className=\"flex-1 border rounded-xl px-3 py-2 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n//           />\n//           <button onClick={() => handleTx('send')} className=\"px-4 py-2 rounded-xl bg-red-500 text-white shadow\">\n//             Send\n//           </button>\n//           <button onClick={() => handleTx('receive')} className=\"px-4 py-2 rounded-xl bg-green-500 text-white shadow\">\n//             Receive\n//           </button>\n//         </div>\n//         <input\n//           value={note}\n//           onChange={(e) => setNote(e.target.value)}\n//           placeholder=\"Note (optional)\"\n//           className=\"border rounded-xl px-3 py-2 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n//         />\n//         <div className=\"text-sm text-gray-500\">Spent this month: {currency(spentThisMonth)}</div>\n//       </section>\n\n//       {/* History */}\n//       <section className=\"mt-6\">\n//         <h3 className=\"text-md font-semibold mb-2\">Transaction History</h3>\n//         <ul className=\"space-y-2\">\n//           {transactions.map((t) => (\n//             <li key={t.id} className=\"flex items-center justify-between bg-gray-50 p-3 rounded-xl shadow-sm\">\n//               <div className=\"flex items-center gap-3\">\n//                 <div className={\"w-9 h-9 rounded-full grid place-items-center \" + (t.type === \"send\" ? \"bg-red-100\" : \"bg-green-100\")}>\n//                   {t.type === \"send\" ? \"−\" : \"+\"}\n//                 </div>\n//                 <div>\n//                   <div className=\"font-medium\">\n//                     {t.type === \"send\" ? \"Sent\" : \"Received\"} {currency(t.amount)}\n//                   </div>\n//                   <div className=\"text-xs text-gray-500\">{t.note || \"—\"} · {t.date}</div>\n//                 </div>\n//               </div>\n//             </li>\n//           ))}\n//           {transactions.length === 0 && <p className=\"text-sm text-gray-400\">No transactions yet</p>}\n//         </ul>\n//       </section>\n//     </main>\n\n//     {/* Sticky bottom nav */}\n//     <nav className=\"h-20 bg-white border-t flex items-center justify-around fixed bottom-0 left-0 right-0\">\n//       <button className=\"flex flex-col items-center text-gray-500\">\n//         <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 mb-1\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\"><path strokeWidth=\"2\" d=\"M3 6h18M3 12h18M3 18h18\"/></svg>\n//         <span className=\"text-xs\">Cards</span>\n//       </button>\n//       <button className=\"flex flex-col items-center text-indigo-600\">\n//         <div className=\"h-12 w-12 bg-indigo-600 rounded-full flex items-center justify-center shadow-lg text-white\">⌁</div>\n//       </button>\n//       <button className=\"flex flex-col items-center text-gray-500\">\n//         <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 mb-1\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\"><circle cx=\"12\" cy=\"8\" r=\"4\" strokeWidth=\"2\"/><path d=\"M4 21a8 8 0 0116 0\" strokeWidth=\"2\"/></svg>\n//         <span className=\"text-xs\">Account</span>\n//       </button>\n//     </nav>\n//   </div>\n// );\n\n// }\n\n// function BudgetRow({ label, left, percent }) {\n//   return (\n//     <div className=\"bg-gray-100 rounded-2xl p-4 shadow-sm\">\n//       <div className=\"flex items-center justify-between\">\n//         <div>\n//           <p className=\"font-medium\">{label}</p>\n//           <p className=\"text-sm text-gray-500\">{left}</p>\n//         </div>\n//         <p className=\"text-lg font-semibold\">{percent}%</p>\n//       </div>\n//       <div className=\"mt-2 h-2 bg-white rounded-full overflow-hidden\">\n//         <div\n//           className=\"h-full bg-indigo-600\"\n//           style={{ width: `${percent}%` }}\n//         />\n//       </div>\n//     </div>\n//   );\n// }\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}